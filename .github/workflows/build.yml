name: Build Signed APK (MCGG-Xbot)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    defaults:
      run:
        working-directory: mobile  # supaya buildozer.spec ditemukan

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git ccache libffi-dev libssl-dev \
            libsqlite3-dev libjpeg-dev libpng-dev zlib1g-dev openjdk-17-jdk unzip python3-dev \
            libsndfile1 libopenblas-dev wget curl zip

      - name: Prepare Android SDK
        run: |
          SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$SDK_ROOT"
          cd "$SDK_ROOT"

          # Download command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
          unzip -q tools.zip -d cmdline-tools
          rm tools.zip

          # Pindahkan ke folder latest agar sdkmanager dikenali
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/ || true
          rm -rf cmdline-tools/cmdline-tools

          # Install SDK components (wajib ada cmdline-tools;latest supaya aidl ikut)
          yes | cmdline-tools/latest/bin/sdkmanager --sdk_root="$SDK_ROOT" --licenses || true
          cmdline-tools/latest/bin/sdkmanager --sdk_root="$SDK_ROOT" --install \
            "platform-tools" "platforms;android-31" "build-tools;31.0.0" "cmdline-tools;latest"

          echo "ANDROID_SDK_ROOT=$SDK_ROOT" >> $GITHUB_ENV
          echo "$SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$SDK_ROOT/build-tools/31.0.0" >> $GITHUB_PATH

      - name: Fix sdkmanager path   # üîß agar buildozer tetap temukan sdkmanager lama
        run: |
          SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$SDK_ROOT/tools/bin"
          ln -sf "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$SDK_ROOT/tools/bin/sdkmanager"
          ln -sf "$SDK_ROOT/cmdline-tools/latest/bin/aidl" "$SDK_ROOT/tools/bin/aidl"

      - name: Install Buildozer & deps
        run: |
          python -m pip install --upgrade pip
          pip install buildozer==1.5.0 cython==0.29.36

      - name: Decode keystore
        run: |
          if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ${{ github.workspace }}/mcgg-release-key.jks
            chmod 600 ${{ github.workspace }}/mcgg-release-key.jks
          fi

      - name: Set NDK path
        run: |
          echo "ANDROIDNDK=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV

      - name: Build APK
        env:
          P4A_RELEASE_KEYSTORE: ${{ github.workspace }}/mcgg-release-key.jks
          P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.KEYSTORE_PASSWORD }}
          P4A_RELEASE_KEYALIAS: ${{ secrets.KEY_ALIAS }}
          P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -f ${{ github.workspace }}/mcgg-release-key.jks ]; then
            echo "üîë Building signed release APK..."
            buildozer -v android release
          else
            echo "üêû Building debug APK..."
            buildozer -v android debug
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcgg-xbot-apk
          path: mobile/bin/*.apk
